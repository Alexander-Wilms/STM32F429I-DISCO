/*
 * uart.cpp
 *
 *  Created on: Nov 16, 2015
 *      Author: schaefer
 */

/* Includes ------------------------------------------------------------------*/

#include "stm32f429i_discovery.h"
#include "stm32f4xx_hal_uart.h"
#include "uart.h"
#include <string.h>
#include "common.h"

#include "FreeRTOS.h"
#include "task.h"
#include "semphr.h"
#include "stm32f4xx_hal.h"
#include "stm32f429i_discovery_lcd.h"

extern TaskHandle_t LCDTaskHandle;
extern SemaphoreHandle_t xSemaphore;
extern QueueHandle_t DisplayQueue;
extern QueueHandle_t TerminalQueue;

uart uart3;

/** @brief  demo task demonstrating USART usage */
void uart_receive_task( void *)
{
	BSP_LED_Init (LED3);
	uint8_t buffer[2]={0, 0};
	uart uart3;

	uart3.puts((const char*) "receive_task\r\n");


	while( true)
    {
		uart3.wait_4_character();
		buffer[0] = uart3.receive();
		uart3.puts( (const char *)buffer);
		char terminalbuffer[2];

		// LCD-Task resumen
		// vTaskResume(LCDTaskHandle);

		if( xSemaphore != NULL )
		{
			xSemaphoreGive( xSemaphore );
		}



		if( DisplayQueue != 0 )
		{
			if( xQueueSend( DisplayQueue, (void *) buffer, ( TickType_t ) 10 ) != pdPASS )
			{
				// Failed to post the message, even after 10 ticks.
			}
		}
    }
}

void uart_send_task( void *)
{
	BSP_LED_Init (LED3);
	uint8_t buffer[2]={0, 0};

	if( xSemaphoreMutex != NULL )
	{
		if( xSemaphoreTake( xSemaphoreMutex, ( TickType_t ) 0 ) == pdTRUE )
		{
			uart3.puts((const char*) "send_task\r\n");
			xSemaphoreGive( xSemaphoreMutex );
	}
}

	char terminalbuffer[2] = {0,0};

	while( true)
    {



		if( TerminalQueue != 0 )
		{
			while( xQueueReceive( TerminalQueue, &( terminalbuffer[0] ), ( TickType_t ) 0 ) )
			{
				// pcRxedMessage now points to the struct AMessage variable posted
				// by vATask.
				if( xSemaphoreMutex != NULL )
				{
					if( xSemaphoreTake( xSemaphoreMutex, ( TickType_t ) 0 ) == pdTRUE )
					{
							uart3.puts( (const char *)terminalbuffer);
							xSemaphoreGive( xSemaphoreMutex );
					}
			}
		}

    }
}
